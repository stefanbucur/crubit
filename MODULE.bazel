# Part of the Crubit project, under the Apache License v2.0 with LLVM
# Exceptions. See /LICENSE for license information.
# SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception

RUST_TOOLCHAIN_VERSION = "nightly/2025-06-02"

bazel_dep(name = "rules_cc", version = "0.1.4")

bazel_dep(name = "rules_rust", version = "0.59.2")
git_override(
    module_name = "rules_rust",
    commit = "1832faa3f1058a27e8b6dd97f45162abe57e2bd6",
    remote = "https://github.com/bazelbuild/rules_rust",
    patches = [
        "@@//bazel/rules_rust:attach_rust_bindings_from_cc_aspect_v2.patch",
    ],
)
rust = use_extension("@rules_rust//rust:extensions.bzl", "rust")
rust.toolchain(
    allocator_library = "@@//common:rust_allocator_shims",
    dev_components = True,
    edition = "2021",
    versions = [RUST_TOOLCHAIN_VERSION],
)
crate = use_extension("@rules_rust//crate_universe:extensions.bzl", "crate")
crate.spec(
    package = "anyhow",
    version = ">0.0.0",
)
crate.spec(
    package = "clap",
    features = [
        "derive",
        "color",
        "derive",
        "env",
        "std",
        "string",
        "suggestions",
    ],
    version = ">=4.3.12",
)
crate.spec(
    package = "cxx",
    version = ">1.0.0",
)
crate.spec(
    package = "either",
    version = ">1.0.0",
)
crate.spec(
    package = "flagset",
    version = ">=0.4.7",
)
crate.spec(
    package = "googletest",
    version = ">0.0.0",
)
crate.spec(
    package = "heck",
    version = ">=0.5.0",
)
crate.spec(
    package = "itertools",
    version = ">0.0.0",
)
crate.spec(
    package = "maplit",
    version = ">0.0.0",
)
crate.spec(
    package = "pin-project",
    version = ">0.0.0",
)
crate.spec(
    package = "phf",
    version = ">=0.12.0",
)
crate.spec(
    package = "proc-macro2",
    version = ">0.0.0",
)
crate.spec(
    package = "quote",
    version = ">0.0.0",
)
crate.spec(
    package = "regex",
    version = ">=1.6.0",
)
crate.spec(
    package = "rustversion",
    version = ">1.0.20",
)
crate.spec(
    package = "salsa",
    version = ">0.0.0",
)
crate.spec(
    package = "serde",
    features = [
        "derive",
        "rc",
    ],
    version = ">0.0.0",
)
crate.spec(
    package = "serde_json",
    version = ">0.0.0",
)
crate.spec(
    package = "static_assertions",
    version = ">0.0.0",
)
crate.spec(
    package = "syn",
    features = ["extra-traits"],
    version = ">0.0.0",
)
crate.spec(
    package = "tempfile",
    version = "=3.4.0",
)
crate.spec(
    package = "unicode-ident",
    version = ">0.0.0",
)
crate.render_config(
    default_package_name = "",
)
crate.from_specs(
    name = "crate_index",
    cargo_lockfile = "//:Cargo.Bazel.lock",
)
use_repo(crate, "crate_index")

bazel_dep(name = "abseil-cpp", version = "20250127.1")
git_override(
    # with nullability support
    module_name = "abseil-cpp",
    commit = "e3a2008867c5dc5c0f4c7a4e64fb568df70f23be",
    remote = "https://github.com/abseil/abseil-cpp",
)

bazel_dep(name = "bazel_skylib", version = "1.7.1")
bazel_dep(name = "fuzztest", version = "20250214.0")
bazel_dep(name = "google_benchmark", version = "1.9.1")
bazel_dep(name = "googletest", version = "1.16.0")
bazel_dep(name = "platforms", version = "0.0.11")

bazel_dep(name = "protobuf", version = "31.0-rc2")
git_override(
    module_name = "protobuf",
    commit = "4f81598aa4786662f8f7f383e0aa5b3388aad717",
    remote = "https://github.com/protocolbuffers/protobuf",
    patches = [
        "@@//bazel/protobuf:rust_dev_dependency_erase.patch",
    ],
)

bazel_dep(name = "re2", version = "2024-07-02.bcr.1")
bazel_dep(name = "rules_license", version = "1.0.0")
bazel_dep(name = "rules_proto", version = "7.1.0")
bazel_dep(name = "rules_python", version = "1.3.0")

register_toolchains(
    "//common/bazel_support/toolchains:cc_bindings_from_rs_on_demand",
    "//common/bazel_support/toolchains:rs_bindings_from_cc_on_demand",
    "//common/bazel_support/toolchains:rs_bindings_from_cc_fake",
)
